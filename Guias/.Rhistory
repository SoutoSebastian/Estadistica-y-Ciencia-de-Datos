install.packages("Lock5Data")
library(Lock5Data)
data("FloridaLakes")
help("FloridaLakes")
force(FloridaLakes)
View(FloridaLakes)
View(FloridaLakes)
histAlcalinidad <- hist(FloridaLakes$Alkalinity, freq = FALSE)
names(histAlcalinidad)
density(histAlcalinidad)
round(max(histAlcalinidad$density), 4)
histAlcalinidad$breaks
histAlcalinidad$counts
histAlcalinidad$mids
mean(FloridaLakes$Alkalinity)
median(FloridaLakes$Alkalinity)
round(mean(FloridaLakes$Alkalinity))
round(mean(FloridaLakes$Alkalinity), 4)
round(median(FloridaLakes$Alkalinity), 4)
round(median(FloridaLakes$Alkalinity), 5)
round(median(FloridaLakes$Alkalinity), 4)
round(mean(FloridaLakes$Alkalinity), 4, trim = 0.2)
round(mean(FloridaLakes$Alkalinity, trim = 0.2), 4)
####Pregunta 7####
round(mean(FloridaLakes$Alkalinity, trim = 0.2), 4)
cantidad <- sum(FloridaLakes$Alkalinity <= 40)
prob <- cantidad / 53
round(prob, 4)
ggplot(FloridaLakes, aes(y = Alkalinity)) +
geom_boxplot(fill = "#77DD77", color = "black") +
labs(title = "Boxplot alcalinidad", y = "Valores") +
theme_minimal()
####Pregunta 12####
library(ggplot2)
ggplot(FloridaLakes, aes(y = Alkalinity)) +
geom_boxplot(fill = "#77DD77", color = "black") +
labs(title = "Boxplot alcalinidad", y = "Valores") +
theme_minimal()
plot(density(FloridaLakes$Alkalinity))
plot(density(FloridaLakes$Alkalinity, bw = 10))
plot(density(FloridaLakes$Alkalinity, bw = 5))
plot(density(FloridaLakes$Alkalinity, bw = 3))
plot(density(FloridaLakes$Alkalinity, bw = 1))
plot(density(FloridaLakes$Alkalinity))
setwd("C:/Users/Sebastian/Desktop/Estadistica-y-Ciencia-de-Datos/Guias")
cpu <- scan("cpu.txt")
s <- sd(cpu)
iqr <- IQR(cpu)
n <- length(cpu)
hsil <- 1.06 * min(s,iqr/1.349) * n^(-1/5)
plot(density(cpu, bw = hsil, kernel = "gaussian", main = "Gráfico de densidades con hsil y h default", col = blue))
plot(density(cpu, bw = hsil, kernel = "gaussian", main = "Gráfico de densidades con hsil y h default", col = "blue"))
plot(density(cpu, bw = hsil, kernel = "gaussian", main = "Gráfico de densidades con hsil y h default", col = "blue"))
plot(density(cpu, bw = hsil, kernel = "gaussian") main = "Gráfico de densidades con hsil y h default", col = "blue"))
plot(density(cpu, bw = hsil, kernel = "gaussian"),
main = "Gráfico de densidades con hsil y h default", col = "blue")
plot(density(cpu, bw = hsil, kernel = "gaussian"),
main = "Gráfico de densidades con hsil y h default", col = "blue")
plot(density(cpu, bw = hsil, kernel = "gaussian"),
main = "Gráfico de densidades con hsil y h default", col = "blue")
plot(density(cpu, bw = hsil, kernel = "gaussian"),
main = "Gráfico de densidades con hsil y h default", col = "blue")
plot(density(cpu, bw = hsil, kernel = "gaussian"),
main = "Gráfico de densidades con hsil y h default", col = "blue")
lines(density(cpu, kernel = "gaussian"), col = "red")
legend("topleft",
legend = c("hsil", "h default"),
col = c("blue", "red"),
lwd = 1,
cex = 0.5)
Debernardi <- read.csv(
"Debernardi.csv"
)
View(Debernardi)
View(Debernardi)
datos <- Debernardi$LYVE1
datos <- Debernardi[Debernardi$diagnosis == 1]$LYVE1
datos <- Debernardi[Debernardi$diagnosis == "1"]$LYVE1
datos <- Debernardi[Debernardi$diagnosis == "1",]$LYVE1
,]$LYVE1
Debernardi$diagnosis == "1"
#1
datos <- Debernardi[Debernardi$diagnosis == "1",]$LYVE1
n1 <- length(datos)
s1 <- sd(datos)
iqr1 <- IQR(datos)
hsil1 <- 1.06 * min(s,iqr/1.349) * n^(-1/5)
datos <- Debernardi[Debernardi$diagnosis == "1",]$LYVE1
n1 <- length(datos)
s1 <- sd(datos)
iqr1 <- IQR(datos)
hsil1 <- 1.06 * min(s1,iqr1/1.349) * n1^(-1/5)
datos2 <- Debernardi[Debernardi$diagnosis == "2",]$LYVE1
n2 <- length(datos2)
s2 <- sd(datos2)
iqr2 <- IQR(datos2)
hsil2 <- 1.06 * min(s2,iqr2/1.349) * n^(-1/5)
datos3 <- Debernardi[Debernardi$diagnosis == "3",]$LYVE1
n3<- length(datos3)
s3 <- sd(datos3)
iqr3 <- IQR(datos3)
hsil3 <- 1.06 * min(s3,iqr3/1.349) * n^(-1/5)
unique(Debernardi$diagnosis)
plot(density(datos, bw = hsil1, kernel = "gaussian"),
main = "Gráfico de densidades para LYVE1 segun diagnosis con hsil", col = "blue")
lines(density(datos2, kernel = "gaussian"), col = "red")
lines(density(datos3, kernel = "gaussian"), col = "green")
legend("topleft",
legend = c("1", "2", "3"),
col = c("blue", "red","green"),
lwd = 1,
cex = 0.5)
plot(density(datos, bw = hsil1, kernel = "epanechnikov"),
main = "Densidades para LYVE1 segun diagnosis con hsil (epanechnikov)", col = "blue")
lines(density(datos2, kernel = "epanechnikov"), col = "red")
lines(density(datos3, kernel = "epanechnikov"), col = "green")
legend("topleft",
legend = c("1", "2", "3"),
col = c("blue", "red","green"),
lwd = 1,
cex = 0.5)
