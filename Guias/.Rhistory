proba <- sobrevivientes_mujeres / sobrevivientes
total <- nrow(titanic)
cant_mujeres <- sum(titanic$Sex == "female")
probaM <- cant_mujeres/total
tabla_contingencia <- table(titanic$Pclass, titanic$Survived)
prop_tabla <- prop.table(tabla_contingencia, margin =1)
prop_tabla1 <- prop_tabla[,"1"]
barplot(prop_tabla1,
main = "Proba sobrevivir dada la clase",
xlab = "Clases",
ylab = "Proba",
col = "skyblue")
iridio <- read.table("iridio.txt", header = TRUE)
rodio <- read.table("rodio.txt", header = TRUE)
hist(iridio[,1],
main = "Sublimación Iridio",
xlab = "Temperatura",
ylab = "Frecuencia",
col = rgb(0,0,1,0.5),
border = "black",
breaks = 10,
freq = FALSE)
hist(rodio[,1],
main = "Sublimación Rodio",
xlab = "Temperatura",
ylab = "Frecuencia",
col = rgb(1,0,0,0.5),
border = "black",
breaks = 10,
freq = FALSE)
boxplot(iridio[,1], rodio[,1],
names = c("Iridio", "Rodio"),
col = c("skyblue", "salmon"),
main = "Boxplots de sublimación",
ylab = "Temperatura")
mediaIridio <- mean(iridio[,1])
mediaRodio <- mean(rodio[,1])
medianaIridio <- median(iridio[,1])
medianaRodio <- median(rodio[,1])
#10%
mediapIridio <- mean(iridio[,1], trim = 0.1)
mediapRodio <- mean(rodio[,1], trim = 0.1)
#20%
mediapIridio <- mean(iridio[,1], trim = 0.2)
mediapRodio <- mean(rodio[,1], trim = 0.2)
dsIridio <- sd(iridio[,1])
dsRodio <- sd(rodio[,1])
iqrIridio <- IQR(iridio[,1])
iqrRodio <- IQR(rodio[,1])
madIridio <- mad(iridio[,1])
madRodio <- mad(rodio[,1])
cuantilesIridio <- quantile(iridio[,1], probs = c(0.9, 0.75, 0.5, 0.2, 0.1))
cuantilesRodio <- quantile(rodio[,1], probs = c(0.9, 0.75, 0.5, 0.2, 0.1))
salchichasA <- read.table("salchichas_A.txt", header = TRUE)
salchichasB <- read.table("salchichas_B.txt", header = TRUE)
salchichasC <- read.table("salchichas_C.txt", header = TRUE)
salchichasA$tipo <- "A"
salchichasB$tipo <- "B"
salchichasC$tipo <- "C"
names(salchichasA)[names(salchichasA) == "CALORIAS.A"]<- "CALORIAS"
names(salchichasB)[names(salchichasB) == "CALORIAS.B"]<- "CALORIAS"
names(salchichasC)[names(salchichasC) == "CALORIAS.C"]<- "CALORIAS"
names(salchichasA)[names(salchichasA) == "SODIO.A"]<- "SODIO"
names(salchichasB)[names(salchichasB) == "SODIO.B"]<- "SODIO"
names(salchichasC)[names(salchichasC) == "SODIO.C"]<- "SODIO"
salchichas <- rbind(salchichasA, salchichasB, salchichasC)
hist(salchichasA[,1],
main = "Calorias salchichas A",
xlab = "Calorias",
ylab = "Frecuencia",
col = rgb(0,0,1,0.5),
border = "black",
breaks = 10,
freq = TRUE)
hist(salchichasB[,1],
main = "Calorias salchichas B",
xlab = "Calorias",
ylab = "Frecuencia",
col = "skyblue",
border = "black",
breaks = 10,
freq = TRUE)
hist(salchichasC[,1],
main = "Calorias salchichas C",
xlab = "Calorias",
ylab = "Frecuencia",
col = "salmon",
border = "black",
breaks = 10,
freq = TRUE)
boxplot(salchichasA[,1], salchichasB[,1],salchichasC[,1],
names = c("A", "B","C"),
col = c(rgb(0,0,1,0.5),"skyblue", "salmon"),
main = "Calorías en salchichas de distintos tipos.",
ylab = "Calorias")
hist(salchichasA[,2],
main = "Sodio salchichas A",
xlab = "Sodio",
ylab = "Frecuencia",
col = rgb(0,0,1,0.5),
border = "black",
breaks = 10,
freq = TRUE)
hist(salchichasB[,2],
main = "Sodio salchichas B",
xlab = "Sodio",
ylab = "Frecuencia",
col = "skyblue",
border = "black",
breaks = 10,
freq = TRUE)
hist(salchichasC[,2],
main = "Sodio salchichas C",
xlab = "Sodio",
ylab = "Frecuencia",
col = "salmon",
border = "black",
breaks = 10,
freq = TRUE)
boxplot(salchichasA[,2], salchichasB[,2],salchichasC[,2],
names = c("A", "B","C"),
col = c(rgb(0,0,1,0.5),"skyblue", "salmon"),
main = "Sodio en salchichas de distintos tipos.",
ylab = "Sodio")
estudiantes <- read.table("estudiantes.txt", header = TRUE)
datos_grupo1 <- estudiantes[,1]
datos_grupo2 <- estudiantes[,2]
hist(datos_grupo1,
freq = FALSE,
col = "lightblue",
border = "white",
main = "Histograma datos Grupo 1 con curva normal",
xlab = "Valores",
ylab = "Densidad")
curve(dnorm(x, mean = mean(datos_grupo1), sd = sd(datos_grupo1)),
col = "red", lwd = 2, add = TRUE)
# Convertir el vector en data frame (ggplot trabaja mejor con data.frames)
df1 <- data.frame(x = datos_grupo1)
# Histograma + curva normal
ggplot(df1, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 8,           # podés cambiar el número de bins
fill = "lightblue",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df1$x), sd = sd(df1$x)),
color = "red", size = 1.2) +
labs(title = "Histograma datos Grupo 1 con curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
df2 <- data.frame(x = datos_grupo2)
ggplot(df2, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 8,
fill = "salmon",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df2$x), sd = sd(df2$x)),
color = "red", size = 1.2) +
labs(title = "Histograma datos Grupo 1 con curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
qqnorm(datos_grupo1,
main = "QQ-plot Grupo 1",
col = "blue", pch = 19)   # puntos en azul
qqline(datos_grupo1,
col = "red", lwd = 2)     # recta en rojo
ggplot(df1, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot Grupo 1",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
ggplot(df2, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot Grupo 2",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
###b
summary(datos_grupo1)
summary(datos_grupo2)
sd(datos_grupo1)
sd(datos_grupo2)
# Convertir a formato largo
df_long <- estudiantes %>%
pivot_longer(cols = c(GRUPO1, GRUPO2),
names_to = "grupo",
values_to = "valor")
# Boxplots paralelos
ggplot(df_long, aes(x = grupo, y = valor, fill = grupo)) +
geom_boxplot() +
labs(title = "Boxplots paralelos de Grupo 1 y Grupo 2",
x = "Grupo",
y = "Valores") +
scale_fill_manual(values = c("salmon", "lightblue")) +
theme_minimal()
nubes <- read.table("nubes.txt", header = TRUE)
df_nubes <- nubes %>%
pivot_longer(cols = c(CONTROLES, TRATADAS),
names_to = "tipoNube",
values_to = "agua")
ggplot(df_nubes, aes(x = tipoNube, y = agua, fill = tipoNube)) +
geom_boxplot() +
labs(title = "Boxplots paralelos nubes controladas y tratadas",
x = "Tipo nube",
y = "Agua caida") +
scale_fill_manual(values = c("salmon", "lightblue")) +
theme_minimal()
df_controles <- data.frame(x = nubes$CONTROLES)
ggplot(df_controles, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "lightblue",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df_controles$x), sd = sd(df_controles$x)),
color = "red", size = 1.2,
xlim = c(min(df_controles$x), max(df_controles$x))) +
labs(title = "Histograma nubes controles + curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
ggplot(df_controles, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot Controles",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
df_tratadas <- data.frame(x = nubes$TRATADAS)
ggplot(df_tratadas, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "salmon",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df_tratadas$x), sd = sd(df_tratadas$x)),
color = "red", size = 1.2) +
labs(title = "Histograma nubes tratadas + curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
ggplot(df_tratadas, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot Tratadas",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
df_controlesLog <- log(df_controles)
ggplot(df_controlesLog, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "lightblue",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df_controlesLog$x), sd = sd(df_controlesLog$x)),
color = "red", size = 1.2,
xlim = c(min(df_controlesLog$x), max(df_controlesLog$x))) +
labs(title = "Histograma nubes controlesLog + curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
ggplot(df_controlesLog, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot ControlesLog",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
df_tratadasLog <- log(df_tratadas)
df_controlesLog <- log(df_controles)
ggplot(df_controlesLog, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "lightblue",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df_controlesLog$x), sd = sd(df_controlesLog$x)),
color = "red", size = 1.2,
xlim = c(min(df_controlesLog$x), max(df_controlesLog$x))) +
labs(title = "Histograma nubes controlesLog + curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
ggplot(df_controlesLog, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot ControlesLog",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
df_tratadasLog <- log(df_tratadas)
ggplot(df_tratadasLog, aes(x = x)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "lightblue",
color = "white") +
stat_function(fun = dnorm,
args = list(mean = mean(df_tratadasLog$x), sd = sd(df_tratadasLog$x)),
color = "red", size = 1.2,
xlim = c(min(df_tratadasLog$x), max(df_tratadasLog$x))) +
labs(title = "Histograma nubes tratadasLog + curva normal",
x = "Valores",
y = "Densidad") +
theme_minimal()
ggplot(df_tratadasLog, aes(sample = x)) +
stat_qq(color = "blue", size = 2) +
stat_qq_line(color = "red", lwd = 1.2) +
labs(title = "QQ-plot tratadasLog",
x = "Cuantiles teóricos",
y = "Cuantiles muestrales") +
theme_minimal()
df_nubes$agua <- log(df_nubes$agua)
ggplot(df_nubes, aes(x = tipoNube, y = agua, fill = tipoNube)) +
geom_boxplot() +
labs(title = "Boxplots paralelos nubes controladas y tratadas (log)",
x = "Tipo nube",
y = "log(agua caida)") +
scale_fill_manual(values = c("salmon", "lightblue")) +
theme_minimal()
data_credit <- read.csv("data_credit_card.csv")
purchases <- data_credit$purchases
df_purchases <- data.frame(purchases)
ggplot(df_purchases, aes(purchases)) +
stat_ecdf(geom = "step") +
labs(title="Función de distribución empírica purchases", y="F(x)")
credit_limit <- data_credit$credit_limit
df_credit_lim <- data.frame(credit_limit)
ggplot(df_credit_lim, aes(credit_limit)) +
stat_ecdf(geom = "step") +
labs(title="Función de distribución empírica credit_limit", y="F(x)")
purchases_freq <- data_credit$purchases_freq
df_purchasesf <- data.frame(purchases_freq)
ggplot(df_purchasesf, aes(purchases_freq)) +
stat_ecdf(geom = "step") +
labs(title="Función de distribución empírica purchases_freq", y="F(x)")
tenure <- data_credit$tenure
df_tenure <- data.frame(tenure)
ggplot(df_tenure, aes(tenure)) +
stat_ecdf(geom = "step") +
labs(title="Función de distribución empírica tenure", y="F(x)")
ggplot(df_credit_lim, aes(x = credit_limit)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "lightblue",
color = "white") +
labs(title = "Histograma credit_limit",
x = "Valores",
y = "Densidad") +
theme_minimal()
plot(density(df_credit_lim$credit_limit), main ="Grafico de densidad credit_limit", xlab = "credit_limit", ylab = "Densidad")
tenure_absoluta <- table(df_tenure)
tenure_relativa <- prop.table(tenure_absoluta)
barplot(tenure_relativa,
main = "Tenure",
xlab = "Meses restantes",
ylab = "Frecuencia",
col = c("pink", "lightblue","#77DD77", "#AEC6CF", "#CBAACB", "#FFB347", "#FFFACD"),
)
for(var in names(data_credit)){
print(paste("Media", var, ":", mean(data_credit[[var]])))
print(paste("Mediana", var, ":", median(data_credit[[var]])))
print(paste("Media 0,1 podada", var, ":", mean(data_credit[[var]], trim = 0.1, na.rm = TRUE)))
print("")
}
for(var in names(data_credit)){
print(paste("Cuantil 0.25", var, ":", quantile(data_credit[[var]], probs = 0.25)))
print(paste("Cuantil 0.75", var, ":", quantile(data_credit[[var]], probs = 0.75)))
print(paste("IQR", var, ":", IQR(data_credit[[var]])))
print(paste("MAD", var, ":", mad(data_credit[[var]])))
print("")
}
ggplot(df_purchases, aes(y = purchases)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(title = "Boxplot purchases", y = "Valores") +
theme_minimal()
ggplot(df_credit_lim, aes(y = credit_limit)) +
geom_boxplot(fill = "#77DD77", color = "black") +
labs(title = "Boxplot credit_limit", y = "Valores") +
theme_minimal()
ggplot(df_purchasesf, aes(y = purchases_freq)) +
geom_boxplot(fill = "#CBAACB", color = "black") +
labs(title = "Boxplot purchases_freq", y = "Valores") +
theme_minimal()
ggplot(df_tenure, aes(y = tenure)) +
geom_boxplot(fill = "#FFFACD", color = "black") +
labs(title = "Boxplot tenure", y = "Valores") +
theme_minimal()
for(var in names(data_credit)){
print(paste("Desvio estandar", var, ":", sd(data_credit[[var]])))
print(paste("Coeficiente de asimetria", var, ":", skewness(data_credit[[var]])))
print(paste("Kurtosis", var, ":", kurtosis(data_credit[[var]])))
print("")
}
# Calcular cuartiles e IQR
Q1 <- quantile(x, 0.25)
Q3 <- quantile(x, 0.75)
IQR <- Q3 - Q1
limite_inf <- Q1 - 1.5*IQR
limite_sup <- Q3 + 1.5*IQR
# Calcular cuartiles e IQR
Q1 <- quantile(x, 0.25)
datos_diag1 <- Debernardi[Debernardi$diagnosis == 1, ]
ggplot(datos_diag1, aes(x = LYVE1)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "#CBAACB",
color = "white") +
labs(title = "Histograma LYVE1 (diag = 1)",
x = "Valores",
y = "Densidad") +
theme_minimal()
datos_diag2 <- Debernardi[Debernardi$diagnosis == 2, ]
ggplot(datos_diag2, aes(x = LYVE1)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "#FFB347",
color = "white") +
labs(title = "Histograma LYVE1 (diag = 2)",
x = "Valores",
y = "Densidad") +
theme_minimal()
datos_diag3 <- Debernardi[Debernardi$diagnosis == 3, ]
ggplot(datos_diag3, aes(x = LYVE1)) +
geom_histogram(aes(y = ..density..),
bins = 8,
fill = "#AEC6CF",
color = "white") +
labs(title = "Histograma LYVE1 (diag = 3)",
x = "Valores",
y = "Densidad") +
theme_minimal()
ggplot() +
stat_ecdf(data = datos_diag1, aes(x = LYVE1, color = "Grupo 1"), geom = "step") +
stat_ecdf(data = datos_diag2, aes(x = LYVE1, color = "Grupo 2"), geom = "step") +
stat_ecdf(data = datos_diag3, aes(x = LYVE1, color = "Grupo 3"), geom = "step") +
labs(
title = "Funciones de distribución empírica LYVE1",
x = "LYVE1",
y = "F(x)",
color = "Grupo"
) +
theme_minimal()
ggplot(Debernardi, aes(x = diagnosis, y = LYVE1, fill = sex)) +
geom_boxplot() +
labs(title = "Boxplots paralelos LYVE1 según diagnosis y diferenciando sexo",
x = "diagnosis",
y = "LYVE1") +
scale_fill_manual(values = c("pink", "lightblue")) +
theme_minimal()
ggplot(Debernardi, aes(x = factor(diagnosis), y = LYVE1, fill = factor(sex))) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(title = "Boxplots paralelos LYVE1 según diagnosis y sexo",
x = "Diagnosis",
y = "LYVE1") +
scale_fill_manual(values = c("pink", "lightblue"),
name = "Sexo",
labels = c("Mujer", "Hombre")) +
theme_minimal()
plot(density(datos_diag1$LYVE1), main ="Grafico de densidad LYVE1", xlab = "LYVE1(ng/ml)",
ylab = "Densidad",col = "#CBAACB", xlim= c(-1,18))
lines(density(datos_diag2$LYVE1), xlab = "LYVE1(ng/ml)",
ylab = "Densidad",col = "#FFB347", add = TRUE)
lines(density(datos_diag3$LYVE1), xlab = "LYVE1(ng/ml)",
ylab = "Densidad",col = "#AEC6CF", add = TRUE)
legend("topright", legend = c("Diag = 1", "Diag = 2", "Diag = 3"),
col = c("#CBAACB", "#FFB347", "#AEC6CF"), lwd = 2)
df1log <- data.frame(LYVE1 = log(Debernardi$LYVE1[Debernardi$diagnosis == 1]))
ggplot(df1log, aes(x = LYVE1)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "#CBAACB",
color = "white") +
labs(title = "Histograma log(LYVE1) (diag = 1)",
x = "Valores",
y = "Densidad") +
theme_minimal()
df2log <- data.frame(LYVE1 = log(Debernardi$LYVE1[Debernardi$diagnosis == 2]))
ggplot(df2log, aes(x = LYVE1)) +
geom_histogram(aes(y = ..density..),
bins = 10,
fill = "#FFB347",
color = "white") +
labs(title = "Histograma log(LYVE1) (diag = 2)",
x = "Valores",
y = "Densidad") +
theme_minimal()
df3log <- data.frame(LYVE1 = log(Debernardi$LYVE1[Debernardi$diagnosis == 3]))
ggplot(df3log, aes(x = LYVE1)) +
geom_histogram(aes(y = ..density..),
bins = 8,
fill = "#AEC6CF",
color = "white") +
labs(title = "Histograma log(LYVE1) (diag = 3)",
x = "Valores",
y = "Densidad") +
theme_minimal()
plot(density(df1log$LYVE1), main ="Grafico de densidad log(LYVE1)", xlab = "log(LYVE1) (ng/ml)",
ylab = "Densidad",col = "#CBAACB", xlim= c(-8,5), ylim = c(0, 0.7))
lines(density(df2log$LYVE1), xlab = "log(LYVE1) (ng/ml)",
ylab = "Densidad",col = "#FFB347", add = TRUE)
lines(density(df3log$LYVE1), xlab = "log(LYVE1) (ng/ml)",
ylab = "Densidad",col = "#AEC6CF", add = TRUE)
legend("topright", legend = c("Diag = 1", "Diag = 2", "Diag = 3"),
col = c("#CBAACB", "#FFB347", "#AEC6CF"), lwd = 2)
#Se observa como 1 y 2 se extienden en los negativos y 3 unicamente en los positivos con
